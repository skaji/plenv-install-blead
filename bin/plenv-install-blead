#!/usr/bin/env bash

set -euo pipefail

info() {
  echo "---> $@" >&2
}

die() {
  info "$@"
  exit 1
}

run() {
  info "$@"
  "$@"
}

run_with_log() {
  local log=$1
  shift
  info "$@"
  set +e
  (
    exec >>$log 2>&1
    "$@"
  )
  local ret=$?
  set -e
  return $ret
}

show_help() {
  echo 'Usage: plenv install-blead [options] [commitish]

Install perl from perl source repository

**NOTE** You need to clone https://github.com/Perl/perl5 first,
and set PLENV_INSTALL_BLEAD_REPOSITORY

Options:
 -D, -U, -A        perl configure options
 -j, --jobs        pass -jN to `make install`, default: -j8
     --as          install name, default: blead-$(git describe --tags --dirty)
 -h, --help        show this help

Examples:
 $ plenv install-blead HEAD
 $ plenv install-blead -Duseithreads -Duseshrplib --as blead-thread-$(date +%Y%m%d-%H%M%S) maint-5.30'
}

main() {
  local option_configure=()
  local option_as=
  local option_jobs=
  local option_help=
  local argv=()
  local _argv=("$@")
  local _v
  while [[ ${#_argv[@]} -gt 0 ]]; do
    case "${_argv[0]}" in
    -A* | -D* | -U*)
      _v="${_argv[0]}"
      _argv=("${_argv[@]:1}")
      option_configure+="$_v"
      ;;
    --as | --as=*)
      if [[ ${_argv[0]} =~ ^--as= ]]; then
        _v="${_argv[0]##--as=}"
        _argv=("${_argv[@]:1}")
      else
        if [[ ${#_argv[@]} -eq 1 ]] || [[ ${_argv[1]} =~ ^- ]]; then
          echo "${_argv[0]} option requires an argument" >&2
          return 1
        fi
        _v="${_argv[1]}"
        _argv=("${_argv[@]:2}")
      fi
      option_as="$_v"
      ;;
    --jobs | -j | --jobs=* | -j=*)
      if [[ ${_argv[0]} =~ ^--jobs= ]]; then
        _v="${_argv[0]##--jobs=}"
        _argv=("${_argv[@]:1}")
      elif [[ ${_argv[0]} =~ ^-j= ]]; then
        _v="${_argv[0]##-j=}"
        _argv=("${_argv[@]:1}")
      else
        if [[ ${#_argv[@]} -eq 1 ]] || [[ ${_argv[1]} =~ ^- ]]; then
          echo "${_argv[0]} option requires an argument" >&2
          return 1
        fi
        _v="${_argv[1]}"
        _argv=("${_argv[@]:2}")
      fi
      if [[ ! $_v =~ ^-?[0-9]+$ ]]; then
        echo "--jobs option takes only integer" >&2
        return 1
      fi
      option_jobs="$_v"
      ;;
    --help | -h)
      option_help=1
      _argv=("${_argv[@]:1}")
      ;;
    -[a-zA-Z0-9][a-zA-Z0-9]*)
      _v="${_argv[0]:1}"
      _argv=($(echo "$_v" | \grep -o . | \sed -e 's/^/-/') "${_argv[@]:1}")
      ;;
    -?*)
      echo "Unknown option ${_argv[0]}" >&2
      return 1
      ;;
    *)
      argv+=("${_argv[0]}")
      _argv=("${_argv[@]:1}")
      ;;
    esac
  done

  if [[ -n $option_help ]]; then
    show_help
    return 1
  fi

  if [[ "${#argv[@]}" -eq 0 ]]; then
    die "Need commitish argument, try: plenv install-blead --help"
  fi
  commitish=${argv[0]}

  local root=${PLENV_ROOT-$HOME/.plenv}

  local perl_repository=
  if [[ -n ${PLENV_INSTALL_BLEAD_REPOSITORY-} ]]; then
    perl_repository=$PLENV_INSTALL_BLEAD_REPOSITORY
  else
    if [[ -n ${GOPATH-} ]] && [[ -d $GOPATH/src/github.com/Perl/perl5 ]]; then
      perl_repository=$GOPATH/src/github.com/Perl/perl5
    else
      die "Need to set PLENV_INSTALL_BLEAD_REPOSITORY, try: plenv install-blead --help"
    fi
  fi

  if [[ ! -d $root/build ]]; then
    mkdir -p $root/build
  fi
  if [[ ! -d $root/versions ]]; then
    mkdir -p $root/versions
  fi

  local build_dir=$root/build/blead-$(date +%Y%m%d-%H%M%S)
  run git clone -q --reference $perl_repository https://github.com/Perl/perl5 $build_dir

  cd $build_dir

  run git checkout -q $commitish

  local as=$option_as
  if [[ -z $as ]]; then
    as=blead-$(git describe --tags --dirty)
  fi
  local prefix=$root/versions/$as
  if [[ -e $prefix ]]; then
    die "Already exists $prefix"
  fi
  info "Using prefix $prefix"

  local configure_options=("-des" "-Dman1dir=none" "-Dman3dir=none" "-Dusedevel" "-Uversiononly" "-Dprefix=$prefix" "-Dscriptdir=$prefix/bin")
  if [[ ${#option_configure[@]} -ne 0 ]]; then
    configure_options=("${configure_options[@]}" "${option_configure[@]}")
  fi

  local build_log=$build_dir.log
  info "Configure/build/install perl, see $build_log"

  if ! run_with_log $build_log ./Configure "${configure_options[@]}"; then
    die "Failed, see $build_log"
  fi

  local job=8
  if [[ -n $option_jobs ]]; then
    job=$option_jobs
  fi
  if ! run_with_log $build_log make -j$job install; then
    die "Failed, see $build_log"
  fi
  if [[ -e $prefix/bin/perl ]]; then
    info "Successfully install perl into $prefix"
    info "You may want to execute: plenv global $as"
  else
    die "Failed, see $build_log"
  fi
}

main "$@"
